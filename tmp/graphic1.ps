%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: graphic1.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR10 CMR17 CMBX12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips graphic1 -o
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.04.07:0925
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.04, 2004/06/23 (adding %GradientCircle style - D.G.)
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 rotate
 /MidPoint ED
 /NumLines ED
 /LastBlue ED
 /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
/FirstRed ED
% D.G. modification begin - Apr.  9, 1998
/GradientPosY ED
/GradientPosX ED
  /GradientScale ED
  /ifGradientCircle ED
% D.G. modification end
  % This avoids gaps due to rounding errors:
    clip
  pathbbox           %leave llx,lly,urx,ury on stack
% D.G. modification begin - Apr. 10, 1998
  4 copy /ury ED /urx ED /lly ED /llx ED
% D.G. modification end
  /y ED /x ED
% D.G. modification begin - Apr. 10, 1998
ifGradientCircle
   {0 GradientPosX eq
    {0 GradientPosX eq {2 copy translate} if} if}
   {2 copy translate} ifelse
% D.G. modification end
    y sub neg /y ED
  x sub neg /x ED  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
   LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
    setrgbcolor
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {/YSizePerLine y NumLines div def
    /CurrentY y 2 div def
    /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def}
       {fill
    /YSizePerLine y NumLines div def
        /CurrentY 0 def
    /MidLine NumLines 1 MidPoint sub mul abs cvi def} ifelse
% DG modification end
  MidLine NumLines 2 sub gt
    { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
   ifelse
    MidLine 0 gt
      {
    /Red FirstRed def
       /Green FirstGreen def
           /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
      } if
       MidLine NumLines lt
         {
    /Red LastRed def
       /Green LastGreen def
       /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat  }
     if
     } def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      Red Green Blue setrgbcolor fill
      /CurrentY CurrentY YSizePerLine sub def
      /Blue Blue BlueIncrement add def
      /Green Green GreenIncrement add def
      /Red Red RedIncrement add def} if}   {0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
    Red Green Blue setrgbcolor fill    /CurrentY CurrentY YSizePerLine add def
    /Blue Blue BlueIncrement add def    /Green Green GreenIncrement add def
    /Red Red RedIncrement add def} ifelse% D.G. modification end
    }def
    end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 54 /six put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 85 /U put
dup 86 /V put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
375F1D70554B85098A89E0640FBACBB77D4D8F6E688928E26EB39814C8D1F908
F746C990FB34447CC7272564F09CBA7B2FC5A5ECD2BAA5288B782942EFFD05F6
CBD9ADFFD8952EED9FE1C6CD0C5172340C010E640A8610E6F21725B5865CF189
D648EC276CB6426CBB7E395B6CADE48C983510EE9E52365B254B7FFB8D1B3705
853C4056C3AEEA3D70CC77F7145E6BBF766D9F917183B82A66F31143844267C1
676EFB9B50919446F9EDCDECB39237AC3A5BA831004DDED9CFFDDED8DB59EC18
64259915C670A1E8F4F900B717FA1543C72D73169371F4F53E60667021AE2878
23FDE394D082592C22C800EF12E48FE7C994E5FD64976D474D867F35C49E54A9
9E5AAB5EA3DF0F2701D2157CA203DA9B73AEC179F99B6899F5A487E235BB155D
18BB56C9D74B1CF4ADA101CE4A90CCF04ABF70A46226077193DC18D35FFF6BD3
7C5E798BC764772495D1D0AEB3FDA8A72F92B007C837C5D636A9BA439A322CE6
AC0A2009CE138C1EA3D3C425A41578D613CB738354DA93F524D4D3505ACAFF06
0C375B9E93201FE51B64E0B0215BC56F251A96EA97EB9E23C798989CD02C3939
F6B0660AD6F33C8439D64CF1B1DE9C666B8AECBD09C660EBB36FBC56BF897A5E
DFD495D0566C3FC867315798DD12F52371F37F86B40659D5ABE9F2B0D4605D9A
404EC619DD4D5C45F79E34469A70EA410C74D5E441BA2FA598BE74CC636B5EDD
2B9A469DBE84209566C998738E0DC2C16FFD2F6F3237AF12E1897B8244816E21
F1CB89424B3CB730A9B6878EC6A13F225F778B98DD6564D28DF6AE32FCC8A3C6
2701FFF47F9AF36A989C7D0618599D9BC3F631459F244F2F4767AC3C65A54F77
D9598741547699A1C34B274B3D091112FE38C944EE283B722072C6C89A4F6D89
91B3199FBD12CED362ECA6F0F2B8029A2BA8D851D0CF0090D2A44B78AB8795EA
58D4A4DD0665AF55995A6FF22A992F93E4E7EE1004FD1D47F4378B42ABA7F5A9
30C0E9825EBC5F510117871ED4D36EACD443CC3D1DD83DA24FC9F1565A44EA40
D60A2197F9654695F3AE36AE2879CE3BDD212C51900A0CF4E61315D588A821A0
5ACDDB5D29D7425F0D36BA84101B3CB898B1ECD4F62D8A617C71C18680D2BC79
1BB5D7F09628F1F44F1261AA572E44B378900DEBE341168E427241586A9ACB10
81A385D052BC14B6D281573CE301FA1CB1E933BD7CC927813FA4FA44FBC2340E
50D402AAF8F76F0F34008E68D5E1F914F7B0646A12C1FDE7025EE712806992D3
067DA6E872A958F01759A99A08476F881C728ED391328576164BD05A0B5ECC47
A18E0AEFB00F6CA8D952AC489DA7AB83459CC27A538A253F5410F97BC0D5B022
5C2CAD5D36B305E05846AD646B332CE8A9E5EBC58135F6ECCDD7F6A394E36732
41D70CC17B5356D8F79F3F66FB5BB21EF916071CA034545F53332212CD0CE72D
438808BAC8259491FF70BEEE13871A17AA6A6F27BB2AB5D49106CC8C9C175849
EA266F07F5840794E34EB8D8D0113213F394001B30715306B2E3E0C8E1C7A609
73797B9C41AB30FC91B3A23605C41563607A17CC10E382DDE1F3341FC12AA6BE
ED4C189CDDDA53809980E5FADA8BB6DC13EC6EE3DF7CD9A3FEBB0FBAA86B2ABA
C163F0DB2115BA6D73302EBC243030CB9183298431DF3E24E282646BE33D6FBA
8D3187AAC33DF5A33518BC2FDD15D38876A91FDDBB1194931ABADF53EA38FD19
7356E14F291FFBBC0A23ACCAC6D17D9465423999FCD8D6131D52276AB5ED879F
1A1941B39EE2F0A196B063613EC5E3AA80FFC67BFC3A7508AF968096F892052F
BD9C141FA5DF7992DCE9B50BDC4B7BB9ECB851EDE98422EB48108636C23F5F26
8B3367BD090CA1DE8AA95E3B62985D2AE96735F41A36606831319988585E7EA2
A991559A898DA634E9ABD43DD1CBAA866AA0BD01F3D29615A6CBC6F2651196DC
DBB475DFAE31E14919757A0BCD609F0214632116203ADC2FCBBDADA63FE1FFC2
B846882785B46CB7C76CBA9C2CAF02D219D02E72A8D211DA70971E01FF7CBFDA
A05C2200FC9B7F99ADE9CCDAAF0664FC129DA5C09A0C8B635255C28A777B3FC4
CBACF90765AC01E874E9F5F5307BA3330A784A169D7BDD242D74C579F603E7AA
6266E8AE797C49C0D4B39E52E54B97EE6F8C8A1FFB23FEC728184C0508EAB80D
0E0B93160312062AF30F81849FA946BF10177127BC70166311FBF5FBB43EE6AF
B2EB6C8102FE9F8A79322526815D841ADB022B7DA265C8A5541802C74F52196F
3E8E7178369C39C00CA2402D67AD578FB003C5158E34F546932EA9A60AE2908B
62F9FE332AC2DC1D2DD38C2D5930B08D6BE068ABBBDEC1EAC265FD88C7EC9034
88D79DA6A35EDB60E2893395E6F8AC9E0ED77AEE67835B07FD8EBA5784E523E2
25D605471ED103F7A30F1EADE451A62BB0F662DEB4B2DDB41E3F8D05EA55C8E9
D2524C2A45CAB2079641C8646353FFF5E4A52B790340305A9DF7809EC035B50D
9F7DA7EF51D593D3D2DD3B0F142566D7D6F3CCF3AA788A5DD455FF7340318489
39C325DE51766E9C9E3F01183401B50BCFD05C9B863BA4566421180F15214978
6C68FA4BC5D5BDCA58F62D23C21CCFFCE628B6E22C2E99BAC59F07A2086D3766
68CF8FF5412BEA46B9B0CC7B49144193710A52C9FC0AAC86BA2E393236EB56CB
65EC85B28A47D0C7EF369FDE247B93CBAA5C9B5DA02EF974105FC7330002D781
147E5DAD4C870F814711A609CB4D7C2258C71211456BBFC54F75E881007E6DC8
A472C303212B6C7E8E35DD99EEDB0264C941400604AB55891B00E0512616960D
B2ACC124FF0252865F5EF847AE7DC590E4C628BB1DE414F71B65301485623E33
53E433A3A4255D6C317F8C69965838F01801CC48EDA535689BCAEDDDEC3D74A7
7140FE1C262C375F470B7DA448130ADA6E18813EEAB82BEBBC3E58D853897EC2
838684108015B818134832FC070E05D2500EF6345D686DF2103DD891A317B12D
89E701205C52115F422093CB073A6BE274DA9AF5447604637DA95BA481FD6CF9
5A95B3BBC36077469A1621E137B342FECB682C7B53811E780F232CAA48405AD6
81E6A4422FE47A43FD32FDBA44AF6E996686948626C5922330032150D75D05CC
326B87B35F781EDCA7A62F5342F593547426DEE04B964F7478FA272A709E88AC
A7C31719445D308279D9FF77191795B134098105BD4ED11B86C795B12B7050D0
8DCB9B8D06950CE9D28121C121D6C0C6B668BF1D26B5A32CC646291F63C49C4D
C7D8BFE560BDCC31362B7E789DACE903E6C084AD60ECDCB297E9C8D9AEB427AA
65DDE7609D061EB810E3227793F5419DB3C981833B1FA17407EF32035EBBE758
F93F5234E6DB1195A25A8AC13EDCE8D59382340274F89655C4284647E86705C1
4EDC2E461FEA02D095A146868155B37EAD27364F4D718E1560A370426B303A6F
91DC03F042C7597D36127BD0D309B7D47A3D26A6B13E74862EEF767879051157
2087CA3FBB9B19240D520471A761375A774FE3A59B52F58C70D8AB8E9C68D6AA
CE4862C179496F0A22FB43F4B18672E4AF9E72E3EED3E39017A30855DA78B884
57C7125A93CA190EAB1C7E42B1C26305BD2CC47EC9F001B21D7757005406ED89
7A311C01696B9F079B0A0F09ED07EF6880789ABC91BA1C75453FD34069D29EB6
88F6474495163B04FF0D42355BC93B3B3015FADCFD424989CE5B8E711327E874
381CD2D638F33BE7DEDD7712033E7F6F5B164269B90E30C9AE76236865EAD4BD
F26D490A52B9256579D5BB7FD364773BC42B2709C0C4B57FA8C48B0E0771AACB
867729C04213A76196F8B9EE210F3291E7D3C01314139851407231F71D3D3CD7
44C441D849DE78C91FB94968775097A6F1F5D4F218A6074C85E82A1ED600ADDF
AC3D2FD995AF684F95E5F4F30614637EA3B0AB0DD831DBE628BCF67D8FBA9DB4
DCD02BEEAD4170DB5ED9AE065D30A34CFD74C73E34BAA87DF5BA8797F82E7723
468D0FFD05DB8A0C6384BE494C6DB2CE89E52A399CD01F3BDF8AA51B69A5E7D6
56F2E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 78 /N put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F6F3F23E0C1657CF5D
E8374835BDBD2DED3690C84A1EBB8E2383A5E49E610B6F5F0F5F5EC43CFD16FF
24FEEFB92425CCB577E17FDE4EA6C50E1448DC5726A21888E25B6D6B52DA3D3C
E4C4C6A73C176DFEB60B6B6191B336AC4F5BAA123E1B3B6FAE4B3FA9DC8F7E39
335277EF2294315BE95F64EBDB1F393B293FD0FDB9DEE6C89082232013130D28
9234FF12DF47D454558A1EE8603B2832772E5CA07D18B34A4763D5B890F7173F
B8FEE8354672EAD67A3F3C9D960B8B5176F314349A6870FEA72C7737A67D52F0
86D97CB0CA82FA32A7D2C943A4EBDFB8C6B0674DEEA298F3AA38A1993E20AB25
4B0C338356924C20A0AC08668435E18C48E5D9A8B16AD2B09F47D8E0B00F2025
DB17F7EB5B2268E2D62A994F10936CADF26374D5BC123E2F07FC9FC7C2FD125D
C3B25BC9AA25FA20418FE3F252F2FF0ACC648D440BA696E4EA5B5ADD9F92F39D
D53DFD6C0B4CD6C2692A327E7E85F74D3249EAA886F5F38C9703C3838A42A0D2
0BE60F1A8177E70EE48634EAD5BE297CA4AB15F1857C26923B6A926161ED32ED
845D864A652EE2FF66EF82C2F881CAA9CD0C068C1FEFB74808A9376C751E8B9B
6C640410EC129DC435E8123F1C8B582EEA203ABF203B2F5FB5E5902E69B0C57D
59D8203898230E8A40160C989C2F0D53E48112B1CD0731BC82B9265A89EFB81E
0720E853F52558C235E9CEA6FE7318ED97229562A891612DA51C236CB3F4E9BF
241450D5C0B73B7A0FE847C4DBB4AC451322C317F1FC83C3F963358EF8244B7C
C70854565B1C249F2BBB88D6309D10CC73588C0CB88D55D222EC539265BB7279
07487AF07CB245DD8F941F341F2855C8C2A73D0808AF83726E40AD7585DF1748
DE06C40BBE7177127AF55A642C2915E7C83B3E51C98FF6DF01B115D17B509E42
4574EF6E3B85B767BE5BDB34C8F036F4B419F614CA27415925399C3E22816A2A
3E585170BCC7477BD86575AD750502A3391E8DA8ECA54B0963CA007E98E57498
1F6F53E00AB6AA36880195B0CEEEA6C0283F0566CA1D90096549C9F3628C44D9
DF35008DC863389C48A9A61AD6082DD82DEB960B8A7B82A9310E111EEA4BC4BA
6D11145CC29037C43B2B3C110871A7EAFC3D1CF44E266C33B8F138AD3373FA51
410AFD7074B0089B4B4AD256CE4E42FE3695DE1BFE7834E45FD25C4A3FDA6C2D
FE316E1FEC7B9B46827FD294DF333E48B997CC0BA4BEF3311A2CA9F67EBA9EDA
A37E0AF5A7FC282E9A80A0452A36A608630CF2C9A399E18AD33CA9C8A255B69C
F4B381A4995D4B449D2C351D8EED650103F8284AE25267BB67341C1D2ECC1079
12786E3B0E59F8CC7A5A32B33CAF6D073E37C76D6BF1A75BFFCA2CF99A139C1F
8594EFE19BED2CAA2B96E80F7735D2F4376D351E5C45F36BCC8112E70B5A317A
CAF56CDF6F1C8D495F446A470E2EC922263732E9BDFEF170BDDB38152F2B5EBD
EBE6374FDD71D6AFF32D71F3228D5C8FB04BAE7BBF6A2B65279B3F43F63306AF
1A7F96644F5E5369C37484BFEA67B3CA654D901D580E7D3C9FE3B660C33B5EC5
A43D03C98D8DCF1373C2D7B16139A09C1F9AC14F76ED49360126E004436F30F3
229F09E960DF77584BBDF740EA9F27945E2AAFC259ECF9E1990043954F1868D9
712F5906960DF77536AB35128DF213328AE19DBFCA015A8C531D30F83AC9332A
2C3D6FA4599404EB693769B102D06F68CAB4935F068F96ADCB3DA7F509DC01FA
C44555907B1906BBB3EF4567171E86F531612BDF84260F566C5D6CB50C21028F
50314B4FFE3DE333763EC71D961D388DCBD924558DDC1801379AAFACF1A81DB4
D94FC707EC4E5D89977A56FF37AEA25C603C1AC3939C04964936F9BA53868FEC
813D8A6263A267506B2E9E38AD747613915266AFE774188A356CCF1631C895F2
4597FA839A5A4B822F982C713F7DA1F4F994EA13318D75074DECBDC85F8BDB00
70C57394C67A862DAAEBBBE53ACFAC1BE478C18682133C876B8625C87DB7D2F3
A9BA0287FC3F5475DA562232E0A962172472CD95FC9938D0A7AB072D8CC88BCF
CFF86914745F20C8589D8B72A7F02C4F0B9AA70CDD75709626BFAB44C80CACCD
F60A97327136F5B7C25A5730181CD11B8DF29B4B50FD345FE53ED0497F8A8A85
7C8863F0D82B03EC1416CA89F616E36F49F59EE2A132B4FAB20C10E79EF3AB00
DD1627750445355E3FE16D84C29026982B1971142B307274831555828A9F01B9
40647209FE2A2538F9BB411EE40D0FBC3B1A8C1B880AAFD68F04F3F0C121C16A
EB806F44E4E453645351034161285CB6EE98AF8FBD39EE91C0D45F4C58C6284D
81EA260DF92DC2059EB4EDCB3A1650B69F9CA83698EC83EDA951DA97FA91FBD1
1FE94A32809491FD7178DB7064A4EC1DC3B475958D89ED3BD3F093AD06650404
0805B889A1CCE1F9D8115984238158569DC2F284BAA72C4F53D7543D801E0681
74B4327A939FCBB174052B1A92FACCC5587750DA6D5D24DE9996259AC9FD0AB6
032188BF07FD9E86D7A947F4922E24716305E3772A8E5191A96A0458868B80F0
3C71C80BF13BAF43AB5CEA1239899B5B0FF365CE76ECF6D3EB93A089415B02D8
BE36A3C7B31545F4F2816DA997B5AAABBD56E9B534BE9D2B1C1687ED7B30219D
2AF03B2963882D346055C1641394D46243B1D9FC0C7984B78026B9211C83ECDD
6AFD3E72D16D0654A2055F75ED2C0F6143442E5DE284179181A7B7F3444EF4A2
1B7B107BA1F9B14D760694C4C982E5330264860C0BC4A5323B9D640BBD42138A
9C3A4F8C0CA9DFBEB6B8014B5EAB4EB75ADD6D6367105F1F85E38D324C2A4DDA
8E0A6D7F578AC8BE0B4583C4397228DD9B9F07DFBBDF426CCCAA847288A7EF73
D561A453934A660CAC78153053F74841B4FC436185D8D2A9C19166E8D6C4838E
0BDC71522D30B7A7FA0856296286FDEB84645AB110C7D334786F4DBBE6F4240D
F90D842C07923EBC4AD89BE1BCCF9C265536B25DBCF995EB547B00D592A21BDD
A9A4677D86B12F6B65744D09D307CBD922BEAE31BE64D725AF857F927C648387
963257385C588E338C17445C38B6428243AA44A5A1CCB29EAE0CAFA3D65A674F
8EFD3CB6E72E3D18D8D9A6BD698D1BA595ACA4182EB2BA4FD6C9148E3064C280
5468276D463DF06466A2405DC6302B2C0C1C98445D1846E7E698A8C44077CCEC
243B8DB50CAAEA923B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 54 /six put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3A3E849C11B14E9138
A16A02EDE96BA4FD773C8B9D9201880C867EF4A5A0434250264B680E85FBE7E7
CFB5E76F92128AF681EE8AE2BC56476BC3322117755F0C024A35E01B8E5873B3
DE1F6A9BE900F89C6FAF9415633CD86E44AA19E09B0C813CAC93EDBA64524566
B32DF73B6BA4CDDB090D1693D80A5D4AC20DE14561EF22D8F51137DE11A30BA6
976F13C8345B44FC96D08126FA6EF4AB5CC7D6094DD7117A9E302CF6A3C38A3E
255C3C92048596DE9071855D20A58FC99E7B93748B7B0B7D5F050B809C36455E
B2D14CCD6F6EEC6B703F4300D5557019CD90C60669050ED2476275D5384CC384
430A2282A489825B54C4EB2E24242C086E4EA35EA092DF7815ED4F2F336657D3
CB97E342F78AFDC691400DCA846F44FC45B1467F14B549B1E8C80D263159FB18
C27A41CE503CABEEE67EFB8C82885D9D7F74EC35DCFDB9D794CDEF19E6CAAB6E
2ACEEDF17D2D7FE4232862C16D1DED415D4862A5EDC245455943A3DFE5422C5E
45E5D0CD32F824FD65755CE1A080F91738872E9BE5C73D57E4EE3E793490940A
3B8FEA42005B553029008EF4383FED9887D683A1900C1351CDC91EA1A5D7E979
04146EB6E4AB74D822A57B56F41CC3A44DB82EC6D52B2514321AC39763F96FDA
5648ECE74BDA1BA604872AD6C5271FA89B438A80A4C7012428ECD18DDA85175E
3CE67FD4A6528AC5353F06A1983104FD0583F6B3B0E85E66C882C0AAB74E9B40
B30938935CDA0B2CB8C62F533276BC137169489200A3F55A6C5E554CF282BEEA
310EAC9C66F4B320C291A5269D44146DECE0E7D5BEC1C0E35C485B47633CF734
3AB6D90E04132C7D6DFDE7AAE99EE9C3ADC17436F95A643CEEB1C428579113EA
E37271010E7D3ED627283E012D583A5D7EB03A0C7115EF1EA64911283CC62080
FDC03DC8B3CC301300FE37C74CE40A237EA2A54732BE0FA483F9C3E240153D7B
1698CB205711933757E69D9C3FF5FDD837F8E25F690777D410CF6EEE600D2892
0CCCBD37B4313FD77933737B416DE96D18D1BCE03390031060D566861181E671
267ACED1EA72F07368680B3C5358A072C349B1BFC07762D7E8F3499A731A306A
6AFDB7F46FEC48679B3FF10464640DD602C61DFF54E4348585BC75B7E3F4D886
141A952205C049A3BAFF0E7E9D9B21D7208762A2578B6467494C6AA6258F9B92
E068105D9C8D34A7DD38903B290343BF536872E33D1B755342E195975116679E
F8A16AE7F0B2B52631BB90E213189CC5F0FEBBD836B36D77A009A039E76F3545
83FC1BAA9EEBCD4FAD6ECE32E52F0C14B128AB8FD755E70CAADD9CA7DA27DB17
0FF3E5D89B843872E2A8717D4D32494C9815DAAFF8F8545DC0590462BD9985A6
33203927A96F4BE0489AA430F264379672A6ECB29A3F9EBEF95C3440C20E18FF
C15673FF7C288C6753605AC6CBE176E5D5466C379960A927BC88B2F51654A7AB
9AF282829A31AB0015146F95A10B34628C1317FE2348226DDFB4714002FAB36B
53B51B316CD3723116129081478DF644BE4569A70572AD16F0B2A87CB4E68A01
FDC10BFF80A5C70CBD04FB97B733DDF4CD5C3DA3F7C29B05181D6017007F6888
6AA9F4F9525BCDC2D13DD40CD85A203356615831EFEC777DF871BCCFA65F2944
F8F25827B6264ADC7B6814B8D31FF778C4BF8A091462A49DB44B88A15A5879ED
C9C295CFC64B0675B584ADB7DCF710D17E253F5DA2FCBC7CF455B777F5E11DA3
E63E5E8A36CB72133F3A5A4907A06B5752A7775FBE229CFF80DB612A24F01D76
4440A4C0E1F6D776DAFE3BB2C92CF2A5D5B733326E0BEC63E4AA7FB9481F3394
568EDB89742994934E0C6F704C145274119E8AA1A86115C09493B3C22E935A8E
3126B009BD71F0417BA34CAB9A5E58D69CF38F7795D91F36E0A3B557E44DEC85
E6C1F7CFEBD1333E447BBE230A3920F63AC231E7661F9604C11B316CFB66045B
8E39F876F1E1C3306D93D95809C0D894D1AB3302B66DAB117483A93A79DCCB46
24696620297FF3F21A4A68BE28005557CCE3FD66A39FE6425019362F40B30689
192E10E2202476C63DE6C26BA03F8AAC2BB6A52282D2533CF359FB90F42EA6AD
7020FF5A2458458A5ECD49EF9826AF775FEB8CB8279C8691AD9355FE7C56C0FF
8BB14CC456CBEA42BD5AEF797DD0F0A7165B90A2FA1DD72275F1EF2EA84E8F8A
E2506C0F0A60BD973B885776E25DB214FF43A4E0EE5639C551685A7FB1CAAD9A
40BDC65F7CF1C13E76A20DB3449A1CD7C872B6DC10769C3C2FF1739EFAF1382F
B613E3A8916287CB54F68C60E01FFD0D7B61955777CD48C642CD6C1077CC9093
0B32959516DE1A3A91989620A3CD97F274B61F7C069EA73CEB66708AE6B4C326
8DAF9FFC2479AC600E04A535E18644FC2072BD21D93AFE769E10D34CC169FA6B
8383ED89DEA3B2A171BAA9D74BE882918C7929A3A383C19882DBDBC56FE034BF
D206390E02F19D4F586712CC845DB1F1C4CF90816938604E6A4607199E7EC69B
45D5B1BAA22A9E4AA267DE4FA580D94785442F9F11FE2CB93BFC1BEAF70A777E
E43B41BFD733636AA496DFEB6A79882E5227305FEDEAA806F21BF9A3F16E062A
5FEF24B5BFCD967C350821F2CE978C0E55A26BB11A502BDDD63A9226708CAC94
3CEBEC79DD4CADCB4E63E292028CE59ECA22A4D00CF860DB37F1546C01D04025
BF133B1DAA5B5E6079A931FFB82D9CED89C70E1FC1F59670F2FD771B05AB3035
7D4EB25E558748C707467168186516A70F65D2571813D11747D41627F71B316A
11D0BA0C087BA7F303FF3D5C657D53BB73E3DE282F1949850C4629D016D7D24C
B104A7F73CA35E51F91F653EE1FB1B6F4972D904626583EA652D1F30A047B1FB
EA816A513D559DD829B2814228CAF5760E8B7BF1213D9D18CAA3F566FBABF849
B7071F4626500882A155EC2527819DA54EA31C6C175150C1A540B5F218C01E3A
7FBBA808990354ECF093615D636EF99EA210D7796CC86CC07C8DFFF43BD769B3
105D18EB3729ACF32F7F006220AED59D88581CD6B7675911F155E4FAE39B38BC
90DC9832F9E56AC450641DFD4400A424507710568DC9E97E94E1C100D39BFAB6
0467160A336C9D310B6668E0A7CD9D01310E136E258097A1467FBD66FC4B5462
09845233C819A08FD61FE812F32228C14DF6B67C6A9048E2C32D952B0D2FF2AF
6BE989063A3B4D563B2C918B997B0483280A6B04AD0DBF9831969C67BD07ED3E
BA0368C84A650D28EC42D87AA4EA7A93829BBBE3B42C88CC400C165945FC6DAE
682648D3D78989DF7106803A908045BDD77194D567A64E974AB9D958A300803F
336C3127C0DE354955934FAB283F19EF013A4B2BAF7AB01E68D18C6E2868F0BD
3D416C5D1790A7F9B186BB6981F1F4C0BFBB22BCD17D022AC6B87960CD34D41D
021C75353B6D96E18924410F04E82D1E1853E1AFAC7D68D8106BC70B81A97F92
F7A77F198ED0C2BE7B55CFCB7ADF1CD6E5427EC065DC71F6901F04C604DF2214
D70E152DCB53BF852578E379B139F70CC9C8BF20E71B0DC0F5FEE7D0CF9224A9
0FC5F014322A342F4A77E1ECD5F8B2348C3B7DDF32AE9CB53DC29C24052013F6
6F72F73D7052DC0C877E3EB5977A044D354A01D0573C4CB759133DF505422DDE
C40AF9AFE295C7BBFFA11899FC0B9DB1D38B2B78D26515D61698064459CE3695
82EEE0614EDA9B2B42D2F4182AB8222F93BC227AAE8C00998530C907D80F5108
AF5653FBC3F4862956BAAB2D88B18B894D28324ED57DEC3FFAC208EB76807E50
E7F864BE69021687A0B071CD8B3DEC84146CB9119C3ECA7AC017F92A6DC1E064
F7FE7711F81C56B3A8E930928078AF74837241BAD8A10127FFEA82458750F4B9
4C5F5BCC4E832D9AC09DB2D945574C5AEB4267A106A107C60CFD4FC3BF020279
903C1EF98EFE67226B1A38827D415B1EEFF67981281A8A64CE20E1E2C4294DF0
1ED1DD2765DE1EEF01FD8B10D1C12FE259792966FCC3BA328B0BBE48B390E838
725E50EA831D70806C885F9F84B052646B382BCEFEF7E96472C170AFE2DFA17A
10C475C519E00E01D1EF6B68F52158D2C99D19098BEF2ECAE7388258B22F0285
FCBE3AA9B8F947CFD53A0B3C04E10B844E5D6E20C3ECC5936BE805BAEF81AF35
79A33FD2D621B78F68FF91B7758C24098ECF1CB6E16142CC36B0B973DB2C8F4A
09822EE606ED883C6B9392E22F0C498B36C75A3CF95AB0011391F263B9B483BC
88FB8BDF9A9B81A794A807BC2F16145398A5B78D5C01DF26292705703A3134DA
DB6CF5122E2E0ACEE71E9AEDFCEF7AF77A4ECB2F35762C75F576378BCCB92063
015E917EC2804A2F0A12F185B674588D4FA918FAF6F0EB900623FEEE407BF08A
FDC47E8D48309F573D02495B9EB9F1401A2F644653786857C6905905ED4BD2B9
B12FA032EF229E0C7E6A85A169C6E39337038EED6FFE88D28EC58A6EC7E34912
527D861B0E13F4092B12DD255E29C5610A86AEAB4A5614189C2E2CEB36CF85C6
D3BE6279EC7457D37B6E963A49EDB53534E8CCD8CF989D7AA0E3F0976FE65C69
C0E23394FF3CF91708BB45723E5DAD790A986C1B500B7DE0F940C071D930C547
A40C5AD38D1BD29E6A6163E016C54983ACAECB3B9D9AC00FD5E6553C1D676544
9A9C2887C5D08C27A87209A54F2FC8B32B34F45DEFA86ED1EDCE030E528A1233
FC742F270557E7A73BF1C77FA69D9A82212BD3E951D09641D9E3A1C3154C1BD2
6FC5B99742A3C5FCDED3C54E514A1EB7F0C9E3487B5F49572C7143569478C55D
090122350D93FFFD99DA04307822F2EEBAE757BEDEAA6C688C661B52AC602AA2
590A480345C9E4BD6E8B1A798A875A8AC9C43916BDEEAB96F7F89684DBC3627F
39990A88F7F238FE5B37622F783DCDBE1101B068A55E8F2262C5655F8963BA06
BBDE1311E9C81D7F8303200EA27CEE00C2FFA159E84194D9ABBE0FA0909A75A5
32F966BF86BDCD3EEE99719D04D0ACBD78AEB4AB95A7E1CDC7A75B74DCBFBB9B
BF8EBCB3415C84CE5C1F012664FA5E540AFA7A0D68AA90B274259F344B5C3DC1
B15D265AEADC2863824783027672A1917EAEA3EC78FD1D408BF63A0FE3FABD0F
7C06F6EDB5DD621D2B272F2CBC54BE5A696D87C6458450B3D55A17143DEAF39C
45F4AC6B09522B571088900DB7DAEB3180C87AF2F065D09589413553747BC1E7
12D06F75F2516CC6B5EE04DC08F21DD680ACA863DF7BBEE1539F7D714404DE1B
AE0E6C98843981362C58C9AEFB131124A5118E4EC0A76842801640E5C0633FC3
2A8EF2DA7BF99EA01A1CFF0E7AB29EDEB78FD5FD2AE1D696569D0CC1E2F0A499
6223D9DC62D2C644DA2E6AAA4B53AF75D603A6F8C90017443F8E9F9120D7C908
3953448C5EEF5007B03D4B23FD5543ACD4A45CB725A7F7C07D5373E0A5E4602F
DDCA1C6ED500E30260882E293B81438F77AE4DFCC7E54998F0D7159E0FFBF02A
9FE82E6E08B76663E56C5B1B788B1C8E00A3E366DF6E3EE122D14F655E15D270
8C4DBF5158162EDE7FA2F4D8B40A42353EC5944CD8790A1CFD0A3C2E3D6DF293
2981A0F2BB8D0FFDFDB697E634C9EFE99219D69BA5643E57C5EA6A4E8AECA58B
1CA593F9ED2FDC480128481FA08957017793436B0B488D98ADF37D3F77719C39
2FD288071909AB1C339A436465C6543D81C54F8E5234014F0528D8F124FC9439
13F768C8270C0475AD627378DB844137FF8ECEBCA394D3C143013DA3AB8902A0
6E19AA9E5393A1478185A3B19D3EFEDA057EA99766A44AF5D390DC31A21FD69D
74B27B81044E072AEFEBA43BD0139A1CE1FFF9FA176942B2255C07840679130C
305EA5E7C59E90FCCE75BE2A2C4085E3893AA612692B87DE5B6B18A0A9808397
3C1DEC83971191576DF25760623A0DB9F1835A93EBE839045C397D45975993E6
C5A98D6A2871B14B89C9DBB3845B00A12DE8AF2C357EE804EF6E99CBA12ACA0D
923D4A3D4AFDCD0D9C4F460C6F3636FC0B8B98DE5C4F82A32D4F8E6A0DA077ED
68193F5756CB73A6D76240E13F5B49F5BDC9AD4650562BC3D89A67E81EDD86E7
6A6DA8C30B4C60FEDE4A0AB2C97269F212D58C1D87F53439659E5906469F10C5
95BA23B5C8B788D6E41297EFC9EEF4146FEDFEA5F97461D28B99E48F00E232A5
CBECFFBB04028734D4D7A4BEA6CDE29D0D142DEB450A2DDD44782771EC7DB3DD
4C65B5246B0B244B048949C4CDA4CF407DBD1E93ED580F28D7515E4F7163DB7D
C9B32C7E5E3373BF25D306BA3628661134AEE19C340D6950E07F71E1037D1398
DA67CE5C5E0872BE89C127106FE3732D0A6B339FF8D76ECCE4E50E436B98DBE1
9D70F86DB828C91EFBE99CF30A9317D0D7BAC1B50E710BD4AC06FB477DF7FEE1
6C8953EEE3790026E447F14C4F110E8533DC33F2A4D9C73AF4BDA644E175B6AE
18DD86CAFB7245127D006292C12473637D5A32C36FEF7B4BDFB0B79A4EFE5AE3
DAD4611D33207E3DCC57CDEA134EE637C16B96549C6152F609895E2113FC4441
D438EC3D72B358B861189C4BAAD3AAE80E2780166416DA83F5123E423329A245
58882EFA63C98BD4500C9A319D0CFEB3550BC373E2503152233B8C9FE8A2E0D3
1235DD776C4B905E1BAF3DA73F241A14ED0AA89683532199B38A9C5CF731E4CE
AECE8D1CA99D4188E6B5055C9917739A4806ED2A00FC5BB62FE1B462448F53A8
D88184EEA7D3C1670B337D94AA57EE772A8FCF8FEFD6316D3CA7E758F6A94098
558523AC14179E2316F0BE05A20C2C072DE680168A14C9BD301501596861B788
DAB2CC7D690A877C6943C795537E1E195C9221BD50E38E0E9E9EE5F05E5431A2
A2EF22C460A2CD9114909F25551BA804E36C344EFD92419476EAB5E26EC7BC87
49EC0A4D5E42A37953B87C8D855057E082F4797CDD1EEF5EC4685FFD93CA4D6A
59EF8782F16A0AFA12C716CA9746C839DE39885BEE3D99596F0D48FA44182998
B6DBA855944EE8BF552B47DB109E833E62D731281B8B891268875BC93B25F136
EB051A3B5A0FAC89CD62957E79781BA5B2EBD39B892AA773FE00B597566B7028
DBDEF25726A359717F574C358CCEF940E43927DCED22E0275A295D32FFF89EA1
3EFBDF03183575A10D173A6FD6744D0D6492C083F03F1C10A98837FE37816364
BE22D1B5B8434943821F1866DB4184E141B173EC149891A0BFD2E25CF4DCB7CA
857DD904F56B112F77B1BF65B1A9BB52280551883E445D526EDCBAC9586E3AEB
0B695CCF3BF464A30C8BDFC0BFEA02678D18D79A884AAAAD1CC658C902BC3D10
7C1679838CF4D987DF59E15DF0249CCA78BAE1B1413910600014864B7437BF05
72F5E2936DD36E2D069434CB41954176AFF82084B43B028A10ECE658BA507491
62B786E7A02581117790AA7EB9125A83AB0D6C53235FD3C3212B8461245FD4D9
27A62FE0608B3858691C5924873037EDE1E6AA0154FFEBA7288B0CA00CA7A0A2
63B48D68FCDD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (graphic1.dvi)
@start /Fa 169[175 179 2[173 2[175 182 1[140 182 1[87
182 183 1[153 178 168 1[175 10[116 1[116 2[116 116 48[{}18
206.559 /CMBX12 rf /Fb 170[143 138 106 141 149 1[149
143 4[68 2[124 130 146 2[143 65[{}12 206.559 /CMR17 rf
/Fc 168[85 1[62 60 46 61 1[57 65 62 76 52 65 1[30 62
65 54 57 63 60 59 62 6[23 3[42 42 2[42 42 42 42 23 46[{}28
83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
1 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.25 TeXcolorgray 0 TeXcolorgray
0.5 TeXcolorgray 0 TeXcolorgray 0 0.1 0.95 TeXcolorrgb
0 TeXcolorgray 0 1 1 TeXcolorrgb 0 TeXcolorgray 0.75
TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 1 0 TeXcolorrgb 0 TeXcolorgray -594 6416 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.85358 SLW 0 1 0  setrgbcolor  0. true
0.0 0.0 597.50473 845.0424 .5 Frame  gsave 1  setgray fill grestore
gsave 0.85358 SLW 0 1 0  setrgbcolor 0 setlinecap stroke  grestore
end
 
@endspecial 1 TeXcolorgray 0 TeXcolorgray
0 1 0 TeXcolorrgb 0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85358 SLW 0 1 0  setrgbcolor  0. true
42.67891 12.80367 583.27843 829.39346 .5 Frame  gsave 1  setgray fill
grestore gsave 0.85358 SLW 0 1 0  setrgbcolor 0 setlinecap stroke 
grestore end


@endspecial 1 TeXcolorgray 0 TeXcolorgray 0 1 0 TeXcolorrgb
0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.85358 SLW 0 1 0  setrgbcolor  0. true
56.90521 14.2263 583.27843 816.5898 .5 Frame  gsave 1  setgray fill
grestore gsave 0.85358 SLW 0 1 0  setrgbcolor 0 setlinecap stroke 
grestore end
 
@endspecial
0 0 1 TeXcolorrgb 0 TeXcolorgray 0 0 1 TeXcolorrgb 0
TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 128.03673 42.67891 56.90521 42.67891
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1
TeXcolorrgb 0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 199.16824 56.90521 199.16824
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end


@endspecial 0 0 1 TeXcolorrgb 0 TeXcolorgray @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 426.7891 199.16824 426.7891 14.2263
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1 TeXcolorrgb 0 TeXcolorgray
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 483.6943 199.16824 483.6943 71.13152
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1 TeXcolorrgb
0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 71.13152 56.90521 71.13152
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
0 0 1 TeXcolorrgb -66 5972 a Fc(SCALE)28 b(1:12)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2997 5943 a(DRA)-9 b(WING)29 b(NUMBER)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2997 6180 a(SHEET)e(1)g(OF)h(1)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray -594
6416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 128.03673 14.2263 128.03673 71.13152
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1 TeXcolorrgb
582 6112 a Fb(SQUARE)61 b(F)-5 b(OUND)g(A)-16 b(TION)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 0 0 1 TeXcolorrgb 0 0 1
TeXcolorrgb 307 5115 a Fa(GUR)-6 b(U)76 b(NANAK)i(DEV)-50
5365 y(ENGINEERING)c(COLLEGE)326 5614 y(LUDHIANA)i(141)j(006)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2973 5778 a Fc(CHECKER)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 51 w(H.S.RAI)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 2973 5613 a(GRADE)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 165 w(A)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
2973 5447 a(D)n(A)-7 b(TE)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
3446 5426 a(22/12/2006)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
2973 5282 a(R)n(OLLNO)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
118 w(15)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 2973 5117
a(CLASS)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 207 w(THIRD)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 2973 4951 a(NAME)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 216 w(HARDEEP)27 b(SINGH)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 0 TeXcolorgray -594
6416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 91.04834 426.7891 91.04834
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1 TeXcolorrgb
0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 110.96516 426.7891 110.96516
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial
0 0 1 TeXcolorrgb 0 TeXcolorgray @beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 130.88199 426.7891 130.88199
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end


@endspecial 0 0 1 TeXcolorrgb 0 TeXcolorgray @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 150.79881 426.7891 150.79881
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 0 1 TeXcolorrgb 0 TeXcolorgray
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.56905 SLW 0 0 1  setrgbcolor  /ArrowA
{ moveto } def /ArrowB { } def [ 583.27843 170.71564 426.7891 170.71564
 /Lineto /lineto load def false Line  gsave 0.56905 SLW 0 0 1  setrgbcolor
0 setlinecap stroke  grestore end
 
@endspecial 0 1 0 TeXcolorrgb
0 TeXcolorgray 1 0 0 TeXcolorrgb 0 TeXcolorgray @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.42262 SLW 1 0 0  setrgbcolor  0. true
241.84715 419.67593 384.11018 564.78423 .5 Frame  gsave 45. rotate
0.8 SLW 0  setgray 4.0 LineFill  grestore gsave 1.42262 SLW 1 0 0 
setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb 0 TeXcolorgray
@beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 1 0 0  setrgbcolor  /ArrowA
{ BeginArrow 1.  1.  scale 0 CLW -2 div T 2.0 5. Tbar 0 CLW 2 div T
newpath false 0.4 1.4 1.5 2. Arrow  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 0 CLW -2 div T 2.0 5. Tbar 0 CLW 2 div T
newpath false 0.4 1.4 1.5 2. Arrow  EndArrow  } def [ 384.11018 576.16527
241.84715 576.16527  /Lineto /lineto load def false Line  gsave 1.42262
SLW 1 0 0  setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 2005 1632 a
 tx@Dict begin { 5.69052 13.33336 6.44444 0.0 90.  Uput UUput } PutCoor
PutBegin  end
 2005
1632 a 1 0 0 TeXcolorrgb 1950 1659 a Fc(50)p 0 TeXcolorgray
2005 1632 a
 tx@Dict begin PutEnd  end
 2005 1632 a 1 0 0 TeXcolorrgb 0 TeXcolorgray
-594 6416 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.42262 SLW 1 0 0  setrgbcolor  /ArrowA
{ BeginArrow 1.  1.  scale 0 CLW -2 div T 2.0 5. Tbar 0 CLW 2 div T
newpath false 0.4 1.4 1.5 2. Arrow  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 0 CLW -2 div T 2.0 5. Tbar 0 CLW 2 div T
newpath false 0.4 1.4 1.5 2. Arrow  EndArrow  } def [ 230.46611 564.78423
230.46611 419.67593  /Lineto /lineto load def false Line  gsave 1.42262
SLW 1 0 0  setrgbcolor 0 setlinecap stroke  grestore end
 
@endspecial 1320
2329 a
 tx@Dict begin 90.  RotBegin  end
 1320 2329 a 1320 2329 a
 tx@Dict begin { 5.69052 13.33336 6.44444 0.0 180.  90.  sub Uput UUput
} PutCoor PutBegin  end
 1320 2329 a 1 0 0 TeXcolorrgb
1265 2356 a Fc(51)p 0 TeXcolorgray 1320 2329 a
 tx@Dict begin PutEnd  end
 1320 2329
a 1320 2329 a
 tx@Dict begin RotEnd  end
 1320 2329 a 0 0 1 0 TeXcolorcmyk 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -594 6416 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.85358 SLW 0  setgray  312.97867 492.23009
35.56575 .5 CLW mul sub 0 360 arc closepath gsave 0 0 1 0  setcmykcolor
fill grestore gsave 0.85358 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
